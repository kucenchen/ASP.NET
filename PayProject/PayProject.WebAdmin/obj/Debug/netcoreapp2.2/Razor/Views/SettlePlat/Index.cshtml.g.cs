#pragma checksum "D:\DiamondTech\KucenChen\PayProject\PayProject.WebAdmin\Views\SettlePlat\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4364a369f7262c591b2a506cd49521614ab7fd1b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_SettlePlat_Index), @"mvc.1.0.view", @"/Views/SettlePlat/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/SettlePlat/Index.cshtml", typeof(AspNetCore.Views_SettlePlat_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\DiamondTech\KucenChen\PayProject\PayProject.WebAdmin\Views\_ViewImports.cshtml"
using PayProject.WebAdmin;

#line default
#line hidden
#line 2 "D:\DiamondTech\KucenChen\PayProject\PayProject.WebAdmin\Views\_ViewImports.cshtml"
using PayProject.WebAdmin.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4364a369f7262c591b2a506cd49521614ab7fd1b", @"/Views/SettlePlat/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3ae8485cd9f822422ef74d5ef8a2d0b24daf65d2", @"/Views/_ViewImports.cshtml")]
    public class Views_SettlePlat_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PayProject.Entity.SettlePlat>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "D:\DiamondTech\KucenChen\PayProject\PayProject.WebAdmin\Views\SettlePlat\Index.cshtml"
  
    ViewBag.Title = "代付渠道管理";
    Layout = PayProject.Common.Utils.Pjax();

#line default
#line hidden
            BeginContext(121, 7761, true);
            WriteLiteral(@"<div id=""container"">
    <style>
        /*.layui-inline {width: 20%;}*/
    </style>
    <div class=""list-wall"">
        <div class=""layui-form list-search"" style=""margin-top:10px;"">
            <div class=""layui-inline"">
                <input class=""layui-input"" id=""platname"" autocomplete=""off"" placeholder=""输入渠道名称查询"">
            </div>
            <div class=""layui-inline"">
                <input class=""layui-input"" id=""platclass"" autocomplete=""off"" placeholder=""输入渠道类名查询"">
            </div>

            <button type=""button"" id=""search"" class=""layui-btn layui-btn-sm"" data-type=""toolSearch""><i class=""layui-icon layui-icon-search""></i> 搜索</button>
            
        </div>
        <table class=""layui-hide"" id=""tablist"" lay-filter=""tool""></table>
    </div>
    <input type=""hidden"" id=""isSave"" value=""0"" />
    <script type=""text/html"" id=""toolbar"">
        <div class=""layui-btn-container"">
            <button type=""button"" class=""layui-btn layui-btn-sm"" lay-event=""toolAdd""><i class=""l");
            WriteLiteral(@"ayui-icon""></i> 新增</button>
            <button type=""button"" class=""layui-btn layui-btn-sm"" lay-event=""toolDel""><i class=""layui-icon""></i> 删除</button>
        </div>
    </script>
    <script>

        layui.config({
            base: '/themes/js/modules/'
        }).use(['table', 'layer', 'jquery', 'laydate', 'common', 'form'],
            function () {
                var table = layui.table,
                    layer = layui.layer,
                    $ = layui.jquery,
                    os = layui.common,
                    laydate = layui.laydate,
                    form = layui.form;
                form.render();
                laydate.render({
                    elem: '#queryValue3'
                    , theme: '#393D49'
                    , type: 'datetime'
                    , format: 'yyyy/MM/dd HH:mm:ss'
                    , range: true
                });

                table.render({
                    toolbar: '#toolbar',
                    elem: '#tabl");
            WriteLiteral(@"ist',
                    headers: os.getToken(),
                    url: '/api/settleplat/getpages',
                    cols: [
                        [
                            { type: 'checkbox', fixed: 'left' },
                            { field: 'plat_id', title: 'ID', width: 90, sort: true, fixed: 'left' },
                            { field: 'plat_name', title: '渠道名称', width: 130 },
                            { field: 'plat_class', title: '渠道类名', width: 110 },
                            { field: 'pay_gateway', title: '支付网关', width: 220 },
                            { field: 'req_gateway', title: '查询网关', width: 220 },
                            { width: 100, title: '操作', templet: '#tool' }
                        ]
                    ],
                    page: { limits: [10, 20, 50, 100, 500, 1000, 5000, 10000], groups: 8 },
                    id: 'tables',
                    initSort: {
                        field: 'plat_id',
                        order: 'desc'
");
            WriteLiteral(@"                    },
                    sort: true,
                    where: {
                        field: 'plat_id',
                        order: 'desc'
                    }
                });

                var guid = '', active = {
                    reload: function () {
                        table.reload('tables',
                            {
                                page: {
                                    curr: 1
                                },
                                where: {
                                    platname: $(""#platname"").val(),
                                    platclass: $(""#platclass"").val(),
                                    field: 'plat_id',
                                    order: 'desc'
                                }
                            });
                    },
                    toolAdd: function () {
                        os.Open('添加', '/settleplat/edit', '700px', '700px', function () {
       ");
            WriteLiteral(@"                     if (parseInt($(""#isSave"").val()) === 1) {
                                $(""#isSave"").val('0');
                                active.reload();
                            }
                        });
                    },
                    toolDel: function () {
                        var checkStatus = table.checkStatus('tables')
                            , data = checkStatus.data;
                        if (data.length === 0) {
                            os.error(""请选择要删除的项目~"");
                            return;
                        }
                        var str = '', strCount = 0;
                        $.each(data, function (i, item) {
                            str += item.plat_id + "","";
                            strCount++;
                        });
                        title = '确定要删除所选的' + strCount + '项?';
                        layer.confirm(title, function (index) {
                            layer.close(index);
                 ");
            WriteLiteral(@"           var loadindex = layer.load(1, {
                                shade: [0.1, '#000']
                            });
                            os.ajax('api/settleplat/delete/', { parm: str }, function (res) {
                                layer.close(loadindex);
                                if (res.statusCode === 200) {
                                    active.reload();
                                    os.success('删除成功！');
                                } else {
                                    os.error(res.message);
                                }
                            });
                        });

                    },
                    toolEdit: function (id) {
                        os.Open('编辑', '/settleplat/edit?id=' + id, '700px', '700px', function () {
                            if (parseInt($(""#isSave"").val()) === 1) {
                                $(""#isSave"").val('0');
                                active.reload();
                 ");
            WriteLiteral(@"           }
                        })
                    },
                    toolSearch: function () {
                        active.reload();
                    }
                };
                table.on('toolbar(tool)', function (obj) {
                    active[obj.event] ? active[obj.event].call(this) : '';
                });
                table.on('tool(tool)', function (obj) {
                    var data = obj.data;
                    if (obj.event === 'edit') {
                        active.toolEdit(data.plat_id);
                    }
                });
                $('.list-search .layui-btn').on('click', function () {
                    var type = $(this).data('type');
                    active[type] ? active[type].call(this) : '';
                });
                table.on('sort(tool)', function (obj) {

                    table.reload('tables', {
                        initSort: obj,
                        where: {
                            f");
            WriteLiteral(@"ield: obj.field,
                            order: obj.type
                        }
                    });
                });
                window.active = active;
            });
    </script>
    <script type=""text/html"" id=""switchOpen"">
        <input type=""checkbox"" name=""status"" disabled value=""{{d.userid}}"" lay-skin=""switch"" lay-text=""正常|禁用"" {{ d.nullity==0?'checked':''}}>
    </script>
    <script type=""text/html"" id=""tool"">
        <a class=""layui-btn layui-btn-primary layui-btn-xs"" lay-event=""edit""><i class=""layui-icon""></i> 修改</a>
    </script>
</div>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PayProject.Entity.SettlePlat> Html { get; private set; }
    }
}
#pragma warning restore 1591
